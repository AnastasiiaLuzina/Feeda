{
	"info": {
		"_postman_id": "9cc10f5a-cb91-4702-807c-4d52ef4fe756",
		"name": "Feeda",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27031842"
	},
	"item": [
		{
			"name": "Administrator authorization and password reset",
			"item": [
				{
					"name": "invalid login wrong email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"adminka@gmail.com\", \r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login wrong password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{email}}\", \r\n  \"password\": \"Baza450\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login password without uppercase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{email}}\", \r\n  \"password\": \"bazaa12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login password cyrillic",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{email}}\", \r\n  \"password\": \"Базабаза1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login password without number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{email}}\", \r\n  \"password\": \"Bazabaza\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login spaces instead password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{email}}\", \r\n  \"password\": \"        \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login password special symbols",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{email}}\", \r\n  \"password\": \"@$Baza123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login password maxlength +1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{email}}\", \r\n  \"password\": \"Bazaaaaaanka1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login password minlength -1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{email}}\", \r\n  \"password\": \"Bazank1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login email without @",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"baza450gmail.com\", \r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login email minlength -1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"a@i.u\", \r\n  \"password\": {{password}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login email maxlength +1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"bbbbbbbbbbbbbbbbbbnnnnnnnnnnnnnnnnnnnjjjjjjjjjjjjjjjjjjjjjjjjjjjjj@i.ua\", \r\n  \"password\": {{password}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login email empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n  \"password\": {{password}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login fields empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login no body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"var token = jsonData.token;\r",
									"pm.environment.set(\"token\", token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"admin123@gmail.com\",\r\n  \"password\": \"Feeda12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "request for reset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"admim123@ukr.net\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/reset-password-email/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"reset-password-email",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid reset password minlength -1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Admink1\",\r\n  \"confirm_password\": \"Admink1\",\r\n  \"token\": \"brp5xg-6df16da24f3ec68e464f08c99fde30a0\",\r\n  \"uidb64\": \"NDZjMzY4NzAtMDk4ZC00NTA5LTlmMzctZGU5YTVmMzBhYWVk\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid reset password maxlength +1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Admiiiiiinka1\",\r\n  \"confirm_password\": \"Admiiiiiinka1\",\r\n  \"token\": \"brp5xg-6df16da24f3ec68e464f08c99fde30a0\",\r\n  \"uidb64\": \"NDZjMzY4NzAtMDk4ZC00NTA5LTlmMzctZGU5YTVmMzBhYWVk\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid reset password without lowcase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"BAZAADMINKA1\",\r\n  \"confirm_password\": \"BAZAADMINKA1\",\r\n  \"token\": \"btanlo-192302ac8f785e906525e3ecb6addade\",\r\n  \"uidb64\": \"MGUyNDBhOGUtNTBkYi00OTIzLTljYjUtNjRlYzIwYTA1YjI5\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid reset password without without uppercase",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"admiiiiiinka1\",\r\n  \"confirm_password\": \"admiiiiiinka1\",\r\n  \"token\": \"brp5xg-6df16da24f3ec68e464f08c99fde30a0\",\r\n  \"uidb64\": \"NDZjMzY4NzAtMDk4ZC00NTA5LTlmMzctZGU5YTVmMzBhYWVk\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid reset password without number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Admiiiiiinkaa\",\r\n  \"confirm_password\": \"Admiiiiiinkaa\",\r\n  \"token\": \"brp5xg-6df16da24f3ec68e464f08c99fde30a0\",\r\n  \"uidb64\": \"NDZjMzY4NzAtMDk4ZC00NTA5LTlmMzctZGU5YTVmMzBhYWVk\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid reset password cyrillic",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"АдмінБаза450\",\r\n  \"confirm_password\": \"АдмінБаза450\",\r\n  \"token\": \"btao5e-867a6e2e8f78873813a1d9293bbf815c\",\r\n  \"uidb64\": \"MGUyNDBhOGUtNTBkYi00OTIzLTljYjUtNjRlYzIwYTA1YjI5\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid reset password with space",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Baza 12345\",\r\n  \"confirm_password\": \"Baza 12345\",\r\n  \"token\": \"brp5xg-6df16da24f3ec68e464f08c99fde30a0\",\r\n  \"uidb64\": \"NDZjMzY4NzAtMDk4ZC00NTA5LTlmMzctZGU5YTVmMzBhYWVk\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid reset password not confirmed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Bazaa12345\",\r\n  \"confirm_password\": \"Bazaaa12345\",\r\n  \"token\": \"brp5xg-6df16da24f3ec68e464f08c99fde30a0\",\r\n  \"uidb64\": \"NDZjMzY4NzAtMDk4ZC00NTA5LTlmMzctZGU5YTVmMzBhYWVk\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid reset password one empty field",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Bazaa12345\",\r\n  \"confirm_password\": \"Bazaa12345\",\r\n  \"uidb64\": \"NDZjMzY4NzAtMDk4ZC00NTA5LTlmMzctZGU5YTVmMzBhYWVk\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid reset password empty fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid reset password no body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid reset password wrong uidb",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Adminka1\",\r\n  \"confirm_password\": \"Adminka1\",\r\n  \"token\": \"brp5xg-6df16da24f3ec68e464f08c99fde30a0\",\r\n  \"uidb64\": \"NjjjMzY4NzAtMDk4ZC00NTA5LTlmMzctZGU5YTVmMzBhYWVk\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid reset password old token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Adminka1\",\r\n  \"confirm_password\": \"Adminka1\",\r\n  \"token\": \"brp5xg-6df16da24f3ec68e464f08c99fde30a0\",\r\n  \"uidb64\": \"NDZjMzY4NzAtMDk4ZC00NTA5LTlmMzctZGU5YTVmMzBhYWVk\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "reset password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Baza12345\",\r\n  \"confirm_password\": \"Baza12345\",\r\n  \"token\": \"btapmy-8fbbff38e6bf23f034448c40534bb76d\",\r\n  \"uidb64\": \"MGUyNDBhOGUtNTBkYi00OTIzLTljYjUtNjRlYzIwYTA1YjI5\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid login with old password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"admim123@ukr.net\",\r\n  \"password\": \"Feeda12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "login with new password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"var jsonData = pm.response.json();\r",
									"var token = jsonData.token;\r",
									"pm.environment.set(\"token\", token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"admim123@ukr.net\",\r\n  \"password\": \"Baza12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "postcondition request for reset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"admim123@ukr.net\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/reset-password-email/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"reset-password-email",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "postcondition reset password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"password\": \"Feedafff\",\r\n  \"confirm_password\": \"Feedafff\",\r\n  \"token\": \"bt8ily-c87fe3c7eb46da53e8ee2476d9b2ef72\",\r\n  \"uidb64\": \"YmJjNDMyZjMtN2VhOC00NTVmLWJjY2QtYzJiMDkzMWY1MjY2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/password-reset-complete/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"password-reset-complete",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/logout/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"logout",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid logout old token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/logout/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"logout",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Projects page of the admin panel",
			"item": [
				{
					"name": "login Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"var token = jsonData.token;\r",
									"pm.environment.set(\"token\", token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "Feeda12345",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin123@gmail.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"admin123@gmail.com\",\r\n    \"password\":\"Feeda12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/users/login/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"login",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data title (31)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"titleeeeeeeeeeeeeeeeeeeeeeeeeee\",\n  \"comment\": \"{{comment_project}}\",\n  \"type_project\": {{type_project}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"tests\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/create-project/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"create-project",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data title is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": null,\n  \"comment\": \"{{comment_project}}\",\n  \"type_project\": {{type_project}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"tests\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/create-project/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"create-project",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data comment 51",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"commenttttttttttttttttttttttttttttttttttttttttttttt\",\n  \"type_project\": {{type_project}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"tests\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/create-project/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"create-project",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data type project is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment}}\",\n  \"type_project\": null,\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"tests\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/create-project/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"create-project",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data type complexity is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment}}\",\n  \"type_project\": {{type_participant}},\n  \"complexity\": null,\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"tests\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/create-project/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"create-project",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data type project status is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment}}\",\n  \"type_project\": {{type_participant}},\n  \"complexity\": {{complexity}},\n  \"project_status\": null,\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"tests\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/create-project/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"create-project",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data start date string",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment}}\",\n  \"type_project\": {{type_participant}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"string\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"tests\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/create-project/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"create-project",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data end date string",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment}}\",\n  \"type_project\": {{type_participant}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"string\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"tests\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/create-project/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"create-project",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data address site string Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment}}\",\n  \"type_project\": {{type_participant}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"string\",\n  \"url\": \"tests\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/create-project/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"create-project",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "project creation without a token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"test2\",\n  \"comment\": \"string\",\n  \"type_project\": \"1\",\n  \"complexity\": 4,\n  \"project_status\": \"2\",\n  \"start_date_project\": \"2003-07-16\",\n  \"end_date_project\": \"2003-07-19\",\n  \"address site\":  \"http://google.com\",\n  \"url\": \"tests\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/create-project/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"create-project",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();",
									"var projectUrl;",
									"",
									"for (var key in responseBody) {",
									"  if (responseBody[key].hasOwnProperty(\"url\")) {",
									"    projectUrl = responseBody[key].url;",
									"    break; // Зупиняємо перебір, якщо знайшли ключ з URL",
									"  }",
									"}",
									"if (projectUrl) {",
									"  pm.environment.set(\"projectUrl\", projectUrl);",
									"  console.log(\"Знайдено URL проекту:\", projectUrl);",
									"} else {",
									"  console.log(\"URL проекту не знайдено.\");",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове число від 1 до 100 \r",
									"var randomNumber = Math.floor(Math.random() * 100) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postTitle =  \"test\" + randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"title\", postTitle); \r",
									"\r",
									"// Масив коментарів\r",
									"var comments = [ \"Складний проєкт, вимагає розуміння технологій\",\r",
									"    \"Потрібен ментор для підтримки новачків\",\r",
									"    \"Великий масштабний проєкт з багатьма інтеграціями\",\r",
									"    \"Фокус на оптимізацію та вдосконалення продукту\",\r",
									"    \"Проєкт з постійними змінами вимог\",\r",
									"    \"Проєкт з використанням новітніх технологій\",\r",
									"    \"Робота над високонавантаженою системою\",\r",
									"    \"Мобільний додаток для платформи iOS\",\r",
									"    \"Веб-додаток для управління бізнес-процесами\",\r",
									"    \"Тестування та вдосконалення інтерфейсу користувача\"];\r",
									"\r",
									"// Випадково вибираємо коментар з масиву\r",
									"var postComment = comments[Math.floor(Math.random() * comments.length)];\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"comment_project\", postComment);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 3 (3 типи проєкту)\r",
									"var randomNumber = Math.floor(Math.random() * 3) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postType = randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"type_project\", postType);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 5 (5 типів складності)\r",
									"var randomNumber = Math.floor(Math.random() * 5) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postComplexity = randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"complexity\", postComplexity);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 3 (3 статуси проєкту)\r",
									"var randomNumber = Math.floor(Math.random() * 3) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postStatus = randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"project_status\", postStatus);\r",
									"\r",
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 100 \r",
									"var randomNumber = Math.floor(Math.random() * 100) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postAddress =  \"https://test\" + randomNumber + \".com\";\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"address_site\", postAddress); \r",
									"\r",
									"// Генеруємо випадкове число від 1 до 100 \r",
									"var randomNumber = Math.floor(Math.random() * 100) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postAddress =  \"test\" + randomNumber + \".com\";\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"url\", postAddress); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment_project}}\",\n  \"type_project\": {{type_project}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"{{url}}\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/create-project/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"create-project",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add participants to the project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"team_lead\":\"0542eb54-a1dd-4422-9ccd-f0d1649de0d2\", \r\n\"user\": [\r\n    \"15feae4e-8c09-4976-b19e-b543bfdda1a7\"\r\n],\r\n\"project\": 8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/command/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"command",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "receiving a project with incorrect url",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/projec/example",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"projec",
								"example"
							]
						}
					},
					"response": []
				},
				{
					"name": "getting a project without a token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/projects/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"projects",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "view all projects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/projects/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"projects",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "view the project detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/command-project-detail/feeda/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"command-project-detail",
								"feeda",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "project change without a token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment_project}}\",\n  \"type_project\": {{type_project}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"tests\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/project/{{projectUrl}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"project",
								"{{projectUrl}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data title (31)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"titleeeeeeeeeeeeeeeeeeeeeeeeeee\",\n  \"comment\": \"{{comment_project}}\",\n  \"type_project\": {{type_project}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"testing1\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/project/{{projectUrl}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"project",
								"{{projectUrl}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data title is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": null,\n  \"comment\": \"{{comment_project}}\",\n  \"type_project\": {{type_project}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"testing2\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/project/{{projectUrl}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"project",
								"{{projectUrl}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data comment 51",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"commenttttttttttttttttttttttttttttttttttttttttttttt\",\n  \"type_project\": {{type_project}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"testing3\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/project/{{projectUrl}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"project",
								"{{projectUrl}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data type project is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment}}\",\n  \"type_project\": null,\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"testing4\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/project/{{projectUrl}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"project",
								"{{projectUrl}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data type complexity is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment}}\",\n  \"type_project\": {{type_project}},\n  \"complexity\": null,\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"testind7\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/project/{{projectUrl}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"project",
								"{{projectUrl}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data type project status is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment}}\",\n  \"type_project\": {{type_project}},\n  \"complexity\": {{complexity}},\n  \"project_status\": null,\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"testing8\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/project/{{projectUrl}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"project",
								"{{projectUrl}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data start date string",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment}}\",\n  \"type_project\": {{type_project}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"string\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"testing9\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/project/{{projectUrl}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"project",
								"{{projectUrl}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data end date string",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment}}\",\n  \"type_project\": {{type_project}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"string\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"testing10\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/project/{{projectUrl}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"project",
								"{{projectUrl}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data address site 31",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment}}\",\n  \"type_project\": {{type_project}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"https://charactercalculator.com\",\n  \"url\": \"testing11\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/project/{{projectUrl}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"project",
								"{{projectUrl}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid data address site string",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment}}\",\n  \"type_project\": {{type_project}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"string\",\n  \"url\": \"testing12\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/project/{{projectUrl}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"project",
								"{{projectUrl}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"title\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.title).to.eql(\"Murfecto\");",
									"});",
									"pm.test(\"comment\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.comment).to.eql(\"shelter\");",
									"});",
									"pm.test(\"type_project\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.type_project).to.eql(1);",
									"});",
									"pm.test(\"complexity\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.complexity).to.eql(1);",
									"});",
									"pm.test(\"project_status\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.project_status).to.eql(1);",
									"});",
									"pm.test(\"start_date_project\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.start_date_project).to.eql(\"2023-06-01\");",
									"});",
									"pm.test(\"end_date_project\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.end_date_project).to.eql(\"2023-08-01\");",
									"});",
									"pm.test(\"address_site\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.address_site).to.eql(\"https://murfecto.com.ua\");",
									"});",
									"pm.test(\"Set url\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"projectUpdatedUrl\", jsonData.url);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове число від 1 до 100 \r",
									"var randomNumber = Math.floor(Math.random() * 100) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postUrl =  \"test\" + randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"url_project\", postUrl); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Murfecto\",\n  \"comment\": \"shelter\",\n  \"type_project\": 1,\n  \"complexity\": 1,\n  \"project_status\": 1,\n  \"start_date_project\": \"2023-06-01\",\n  \"end_date_project\": \"2023-08-01\",\n  \"address_site\":  \"https://murfecto.com.ua\",\n  \"url\": \"{{url_project}}\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/project/{{projectUrl}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"project",
								"{{projectUrl}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "postcondition view the updated project detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/command-project-detail/{{projectUpdatedUrl}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"command-project-detail",
								"{{projectUpdatedUrl}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "deleting a project without a token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/project/{{url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"project",
								"{{url}}",
								""
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "h{{base_url}}/user-project/project/{{url}}/",
							"host": [
								"h{{base_url}}"
							],
							"path": [
								"user-project",
								"project",
								"{{url}}",
								""
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "postcondition view the deleted project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/command-project-detail/{{projectUrl}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"command-project-detail",
								"{{projectUrl}}",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Participants page of the admin panel",
			"item": [
				{
					"name": "(invalid first_name 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"A\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid first_name 21)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"Anastasiiaanastasiiaa\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid first_name Null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": null,\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid last_name 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"L\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid last_name 51)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"Luzinaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid last_name Null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": null,\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid speciality Null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": null,\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid phone_number 10)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"+380666666\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid phone_number 14)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"+3806666666666\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid phone_number Null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": null,\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid email 5)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"gmail\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid email 71)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"testinggggggggggggggggggggggggggggggggggggggggggggggggggggggg@gmail.com\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid email Null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": null,\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid discord 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"a\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid discord 38)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"anastasiiaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid discord Null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": null,\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid linkedin 18)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"stri/linkedin.com/\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid linkedin 129)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"https://www.linkedin.com/in/anastasiia-luzina 5730b4272156165165165sdf1s5d1fsd561ds651fds5f1ds65f15sd1d5156sd1dsfvs515dvd51515vdd\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid linkedin Null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": null,\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid city 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"K\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid city 51)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"Kyivvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid experience Null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": null,\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid stack 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"Q\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid stack 301)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"QA Manualllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllllll\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid stack Null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": null,\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "create a new participant with city null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"{{phone_number}}\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": null,\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "create a new participant with phone_number other countries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"first_name\": \"{{first_name}}\",\n  \"last_name\": \"{{last_name}}\",\n  \"speciality\": {{speciality}},\n  \"phone_number\": \"+48123456789\",\n  \"email\": \"{{email_participant}}\",\n  \"comment\": \"{{comment}}\",\n  \"account_discord\": \"{{account_discord}}\",\n  \"account_linkedin\": \"{{account_linkedin}}\",\n  \"city\": \"{{city}}\",\n  \"experience\": {{experience}},\n  \"project\": [{{project}}],\n  \"stack\": \"{{stack}}\",\n  \"type_participant\": {{type_participant}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new participant (positive testing)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"JSON response contains id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"});\r",
									"pm.test(\"Set id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.environment.set(\"id\", jsonData.id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Масив імен\r",
									"var names = [ \"Олег\", \"Володимир\",\"Іван\",\"Михайло\", \"Андрій\",\"Сергій\",\"Петро\",\"Олександр\",\"Дмитро\",\"Артем\",  \"Оксана\",\"Тетяна\",\"Марія\",\"Анна\",\"Ірина\",\"Наталія\",\"Вікторія\",\"Катерина\",\"Олена\",\"Юлія\"];\r",
									"\r",
									"// Випадково вибираємо ім'я з масиву\r",
									"var postName = names[Math.floor(Math.random() * names.length)];\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"first_name\", postName);\r",
									"\r",
									"// Масив прізвищ\r",
									"var surnames = [ \"Іваненко\", \"Петренко\",\"Сидоренко\",\"Коваленко\",\"Ковальчук\", \"Мельничук\",\"Мороз\",\"Ткачук\",\"Бондар\",\"Лисенко\", \"Кравченко\", \"Іваненко\", \"Мельниченко\"];\r",
									"// Випадково вибираємо прізвище з масиву\r",
									"var postSurname = surnames[Math.floor(Math.random() * surnames.length)];\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"last_name\", postSurname);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 7 (7 ролей)\r",
									"var randomNumber = Math.floor(Math.random() * 7) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postSpeciality = randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"speciality\", postSpeciality);\r",
									"\r",
									"// Генеруємо випадкове число \r",
									"var minNumber = 1000000;\r",
									"var maxNumber = 9999999;\r",
									"\r",
									"var randomNumber = Math.floor(Math.random() * (maxNumber - minNumber + 1)) + minNumber;\r",
									"// Формуємо значення змінної, складаючи \"+380\" і випадкове число\r",
									"var postPhone = \"+38099\" + randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"phone_number\", postPhone);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 100 \r",
									"var randomNumber = Math.floor(Math.random() * 100) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postEmail =  \"test\" + randomNumber + \"@ukr.net\";\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"email\", postEmail);\r",
									"\r",
									"// Масив коментарів\r",
									"var comments = [ \"Комунікабельний\",\"Відповідальний\",\"Дисциплінований\",\"Креативний\",\"Працьовитий\",\"Пунктуальний\",\"Ефективний\",\"Вміє працювати в команді\",\"Організований\", \"Аналітичний\"];\r",
									"\r",
									"// Випадково вибираємо коментар з масиву\r",
									"var postComment = comments[Math.floor(Math.random() * comments.length)];\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"comment\", postComment);\r",
									"\r",
									"// Генеруємо випадкове число \r",
									"var minNumber = 1000;\r",
									"var maxNumber = 9999;\r",
									"\r",
									"var randomNumber = Math.floor(Math.random() * (maxNumber - minNumber + 1)) + minNumber;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postDiscord = \"user#\" + randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"account_discord\", postDiscord);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 100 \r",
									"var randomNumber = Math.floor(Math.random() * 100) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postLinkedin =  \"https://www.linkedin.com/in/user\" + randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"account_linkedin\", postLinkedin);\r",
									"\r",
									"// Масив міст України\r",
									"var cities = [\"Київ\",\"Вінниця\",\"Луцьк\",\"Дніпро\",\"Донецьк\",\"Житомир\",\"Ужгород\",\"Запоріжжя\", \"Івано-Франківськ\",\"Кропивницький\",\"Луганськ\",\"Львів\",\"Миколаїв\", \"Одеса\",\"Полтава\",\"Рівне\",\"Суми\",\"Тернопіль\",\"Харків\",\"Херсон\",\"Хмельницький\",\"Черкаси\",\"Чернівці\",\"Чернігів\"];\r",
									"\r",
									"// Випадково вибираємо місто з масиву\r",
									"var postCity = cities[Math.floor(Math.random() * cities.length)];\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"city\", postCity);\r",
									"\r",
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 10 \r",
									"var randomNumber = Math.floor(Math.random() * 10) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postProject = randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"project\", postProject);\r",
									"\r",
									"// Масив стеку\r",
									"var stacks = [ \"Java\", \"Python\",\"JavaScript\",\"C#\",\"PHP\",\"HTML/CSS\",\"SQL\", \"React\",\"Angular\",\"Vue.js\",\"Node.js\", \"Django\",\r",
									"    \"Flask\",\"Spring Boot\",\"ASP.NET\",\"Laravel\", \"Ruby on Rails\",\r",
									"    \"iOS Development\",\"Android Development\",\"Manual QA\",\"Automated Testing\",\"DevOps\"];\r",
									"\r",
									"// Випадково вибираємо стек з масиву\r",
									"var postStack = stacks[Math.floor(Math.random() * stacks.length)];\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"stack\", postStack);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 3 (3 типи участі)\r",
									"var randomNumber = Math.floor(Math.random() * 3) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postType = randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"type_participant\", postType);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"{{first_name}}\",\r\n  \"last_name\": \"{{last_name}}\",\r\n  \"speciality\": {{speciality}},\r\n  \"phone_number\": \"{{phone_number}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"comment\": \"{{comment}}\",\r\n  \"account_discord\": \"{{account_discord}}\",\r\n  \"account_linkedin\": \"{{account_linkedin}}\",\r\n  \"city\": \"{{city}}\",\r\n  \"experience\": {{experience}},\r\n  \"project\": [{{project}}],\r\n  \"stack\": \"{{stack}}\",\r\n  \"type_participant\": {{type_participant}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "View participant data by id (positive testing)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/get-participant/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"get-participant",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid wrong id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/user-project/get-participant/4852695695/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"get-participant",
								"4852695695",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "View all participants (positive testing)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/participants-list/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participants-list",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid wrong id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Anna\",\r\n  \"last_name\": \"Luzina\",\r\n  \"speciality\": 1,\r\n  \"phone_number\": \"+380999999999\",\r\n  \"email\": \"testing@gmail.com\",\r\n  \"comment\": \"string\",\r\n  \"account_discord\": \"anastasiia\",\r\n  \"account_linkedin\": \"https://www.linkedin.com/in/anastasiia\",\r\n  \"city\": \"string\",\r\n  \"experience\": false,\r\n  \"project\": 1,\r\n  \"stack\": \"QA Manual\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/51616541968465/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"51616541968465",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating participant first name by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Anna\",\r\n  \"last_name\": \"Luzina\",\r\n  \"speciality\": 3,\r\n  \"phone_number\": \"+380666666666\",\r\n  \"email\": \"testing@gmail.com\",\r\n  \"comment\": \"responsible\",\r\n  \"account_discord\": \"anastasiia\",\r\n  \"account_linkedin\": \"https://www.linkedin.com/in/anastasiia\",\r\n  \"city\": \"Dnipro\",\r\n  \"experience\": false,\r\n  \"project\": [2],\r\n  \"stack\": \"QA Manual\",\r\n  \"type_participant\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating participant last name by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Anna\",\r\n  \"last_name\": \"Komarnko\",\r\n  \"speciality\": 3,\r\n  \"phone_number\": \"+380666666666\",\r\n  \"email\": \"testing@gmail.com\",\r\n  \"comment\": \"responsible\",\r\n  \"account_discord\": \"anastasiia\",\r\n  \"account_linkedin\": \"https://www.linkedin.com/in/anastasiia\",\r\n  \"city\": \"Dnipro\",\r\n  \"experience\": false,\r\n  \"project\": [2],\r\n  \"stack\": \"QA Manual\",\r\n  \"type_participant\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating participant speciality by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Anna\",\r\n  \"last_name\": \"Komarenko\",\r\n  \"speciality\": 4,\r\n  \"phone_number\": \"+380666666666\",\r\n  \"email\": \"testing@gmail.com\",\r\n  \"comment\": \"responsible\",\r\n  \"account_discord\": \"anastasiia\",\r\n  \"account_linkedin\": \"https://www.linkedin.com/in/anastasiia\",\r\n  \"city\": \"Dnipro\",\r\n  \"experience\": false,\r\n  \"project\": [2],\r\n  \"stack\": \"QA Manual\",\r\n  \"type_participant\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating participant phone number by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Anna\",\r\n  \"last_name\": \"Komarenko\",\r\n  \"speciality\": 4,\r\n  \"phone_number\": \"+380999999999\",\r\n  \"email\": \"testing@gmail.com\",\r\n  \"comment\": \"responsible\",\r\n  \"account_discord\": \"anastasiia\",\r\n  \"account_linkedin\": \"https://www.linkedin.com/in/anastasiia\",\r\n  \"city\": \"Dnipro\",\r\n  \"experience\": false,\r\n  \"project\": [2],\r\n  \"stack\": \"QA Manual\",\r\n  \"type_participant\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating participant email by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Anna\",\r\n  \"last_name\": \"Komarenko\",\r\n  \"speciality\": 4,\r\n  \"phone_number\": \"+380999999999\",\r\n  \"email\": \"example@gmail.com\",\r\n  \"comment\": \"responsible\",\r\n  \"account_discord\": \"anastasiia\",\r\n  \"account_linkedin\": \"https://www.linkedin.com/in/anastasiia\",\r\n  \"city\": \"Dnipro\",\r\n  \"experience\": false,\r\n  \"project\": [2],\r\n  \"stack\": \"QA Manual\",\r\n  \"type_participant\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating participant comment by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Anna\",\r\n  \"last_name\": \"Komarenko\",\r\n  \"speciality\": 4,\r\n  \"phone_number\": \"+380999999999\",\r\n  \"email\": \"example@gmail.com\",\r\n  \"comment\": \"communicative\",\r\n  \"account_discord\": \"anastasiia\",\r\n  \"account_linkedin\": \"https://www.linkedin.com/in/anastasiia\",\r\n  \"city\": \"Dnipro\",\r\n  \"experience\": false,\r\n  \"project\": [2],\r\n  \"stack\": \"QA Manual\",\r\n  \"type_participant\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating participant account discord by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Anna\",\r\n  \"last_name\": \"Komarenko\",\r\n  \"speciality\": 4,\r\n  \"phone_number\": \"+380999999999\",\r\n  \"email\": \"example@gmail.com\",\r\n  \"comment\": \"communicative\",\r\n  \"account_discord\": \"anastasiia#1111\",\r\n  \"account_linkedin\": \"https://www.linkedin.com/in/anastasiia\",\r\n  \"city\": \"Dnipro\",\r\n  \"experience\": false,\r\n  \"project\": [2],\r\n  \"stack\": \"QA Manual\",\r\n  \"type_participant\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating participant  account linkedin by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Anna\",\r\n  \"last_name\": \"Komarenko\",\r\n  \"speciality\": 4,\r\n  \"phone_number\": \"+380999999999\",\r\n  \"email\": \"example@gmail.com\",\r\n  \"comment\": \"communicative\",\r\n  \"account_discord\": \"anastasiia#1111\",\r\n  \"account_linkedin\": \"https://www.linkedin.com/in/anastasiia123\",\r\n  \"city\": \"Dnipro\",\r\n  \"experience\": false,\r\n  \"project\": [2],\r\n  \"stack\": \"QA Manual\",\r\n  \"type_participant\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating participant  city by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Anna\",\r\n  \"last_name\": \"Komarenko\",\r\n  \"speciality\": 4,\r\n  \"phone_number\": \"+380999999999\",\r\n  \"email\": \"example@gmail.com\",\r\n  \"comment\": \"communicative\",\r\n  \"account_discord\": \"anastasiia#1111\",\r\n  \"account_linkedin\": \"https://www.linkedin.com/in/anastasiia123\",\r\n  \"city\": \"Poltava\",\r\n  \"experience\": false,\r\n  \"project\": [2],\r\n  \"stack\": \"QA Manual\",\r\n  \"type_participant\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating participant  experience by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Anna\",\r\n  \"last_name\": \"Komarenko\",\r\n  \"speciality\": 4,\r\n  \"phone_number\": \"+380999999999\",\r\n  \"email\": \"example@gmail.com\",\r\n  \"comment\": \"communicative\",\r\n  \"account_discord\": \"anastasiia#1111\",\r\n  \"account_linkedin\": \"https://www.linkedin.com/in/anastasiia123\",\r\n  \"city\": \"Poltava\",\r\n  \"experience\": true,\r\n  \"project\": [2],\r\n  \"stack\": \"QA Manual\",\r\n  \"type_participant\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating participant  project by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Anna\",\r\n  \"last_name\": \"Komarenko\",\r\n  \"speciality\": 4,\r\n  \"phone_number\": \"+380999999999\",\r\n  \"email\": \"example@gmail.com\",\r\n  \"comment\": \"communicative\",\r\n  \"account_discord\": \"anastasiia#1111\",\r\n  \"account_linkedin\": \"https://www.linkedin.com/in/anastasiia123\",\r\n  \"city\": \"Poltava\",\r\n  \"experience\": true,\r\n  \"project\": [2],\r\n  \"stack\": \"QA Manual\",\r\n  \"type_participant\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating participant  stackby id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"first_name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.first_name).to.eql(\"Anna\");\r",
									"});\r",
									"pm.test(\"last_name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.last_name).to.eql(\"Komarenko\");\r",
									"});\r",
									"pm.test(\"phone number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.phone_number).to.eql(\"+380999999999\");\r",
									"});\r",
									"pm.test(\"email\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql(\"example@gmail.com\");\r",
									"});\r",
									"pm.test(\"comment\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.comment).to.eql(\"communicative\");\r",
									"});\r",
									"pm.test(\"account discord\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.account_discord).to.eql(\"anastasiia#1111\");\r",
									"});\r",
									"pm.test(\"account linkedin\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.account_linkedin).to.eql(\"https://www.linkedin.com/in/anastasiia123\");\r",
									"});\r",
									"pm.test(\"city\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.city).to.eql(\"Poltava\");\r",
									"});\r",
									"pm.test(\"experience\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.experience).to.eql(true);\r",
									"});\r",
									"pm.test(\"stack\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.stack).to.eql(\"Designer\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Anna\",\r\n  \"last_name\": \"Komarenko\",\r\n  \"speciality\": 4,\r\n  \"phone_number\": \"+380999999999\",\r\n  \"email\": \"example@gmail.com\",\r\n  \"comment\": \"communicative\",\r\n  \"account_discord\": \"anastasiia#1111\",\r\n  \"account_linkedin\": \"https://www.linkedin.com/in/anastasiia123\",\r\n  \"city\": \"Poltava\",\r\n  \"experience\": true,\r\n  \"project\": [2],\r\n  \"stack\": \"Designer\",\r\n  \"type_participant\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "postcondition View participant updated data by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"first_name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.first_name).to.eql(\"Anna\");\r",
									"});\r",
									"pm.test(\"last_name\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.last_name).to.eql(\"Komarenko\");\r",
									"});\r",
									"pm.test(\"phone number\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.phone_number).to.eql(\"+380999999999\");\r",
									"});\r",
									"pm.test(\"email\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql(\"example@gmail.com\");\r",
									"});\r",
									"pm.test(\"comment\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.comment).to.eql(\"communicative\");\r",
									"});\r",
									"pm.test(\"account discord\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.account_discord).to.eql(\"anastasiia#1111\");\r",
									"});\r",
									"pm.test(\"account linkedin\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.account_linkedin).to.eql(\"https://www.linkedin.com/in/anastasiia123\");\r",
									"});\r",
									"pm.test(\"city\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.city).to.eql(\"Poltava\");\r",
									"});\r",
									"pm.test(\"experience\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.experience).to.eql(true);\r",
									"});\r",
									"pm.test(\"stack\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.stack).to.eql(\"Designer\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/get-participant/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"get-participant",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Send email",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/send/{{id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"send",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid wrong id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/15616565654165",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"15616565654165"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleting participant by id (positive testing)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/participant-detail/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participant-detail",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "postcondition View delated participant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/get-participant/{{id}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"get-participant",
								"{{id}}",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search participant",
			"item": [
				{
					"name": "invalid unauthorised search no tocken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/filter-participant/?last_name=Doe",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"filter-participant",
								""
							],
							"query": [
								{
									"key": "last_name",
									"value": "Doe"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid unauthorised search old tocken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/filter-participant/?last_name=Doe",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"filter-participant",
								""
							],
							"query": [
								{
									"key": "last_name",
									"value": "Doe"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search for a participant by last name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/search-user/?query=Levkovich",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"search-user",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "Levkovich"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search for a participant by stack",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/search-user/?query=JS",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"search-user",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "JS"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search for a participant by speciality",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/search-user/?query=Frontend",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"search-user",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "Frontend"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search for a participant 2 existing values same field last name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/search-user/?query=Levkovich&query=Dronb",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"search-user",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "Levkovich"
								},
								{
									"key": "query",
									"value": "Dronb"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search for a participant 2 existing values same field stack",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/search-user/?query=Python&query=Django",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"search-user",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "Python"
								},
								{
									"key": "query",
									"value": "Django"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search for a participant 2 existing values same field speciality",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/search-user/?query=frontend&query=backend",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"search-user",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "frontend"
								},
								{
									"key": "query",
									"value": "backend"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search for a participant 2 existing values different fields stack/speciality",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/search-user/?query=postman&query=backend",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"search-user",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "postman"
								},
								{
									"key": "query",
									"value": "backend"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search for a participant 2 existing values different fields last name/speciality",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/search-user/?query=Levkovich&query=backend",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"search-user",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "Levkovich"
								},
								{
									"key": "query",
									"value": "backend"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search for a participant 2 existing values different fields last name/stack",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/search-user/?query=Levkovich&query=java",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"search-user",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "Levkovich"
								},
								{
									"key": "query",
									"value": "java"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search for a participant 2 values same field stack but only one exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/search-user/?query=JS&query=Node.JS",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"search-user",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "JS"
								},
								{
									"key": "query",
									"value": "Node.JS"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search for a participant 2 values different fields stack/speciality but only one exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/search-user/?query=backend&query=Node.JS",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"search-user",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "backend"
								},
								{
									"key": "query",
									"value": "Node.JS"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid Search for a participant with nonexisting value",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/search-user/?query=durepa",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"search-user",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "durepa"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search for a participant by last name case insensitiveness",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/search-user/?query=lEVKOVICH",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"search-user",
								""
							],
							"query": [
								{
									"key": "query",
									"value": "lEVKOVICH"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Project filtration (side bar)",
			"item": [
				{
					"name": "invalid unauthorised filtration no tocken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/filter-project/?project_status=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"filter-project",
								""
							],
							"query": [
								{
									"key": "project_status",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid unauthorised filtration old tocken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/filter-project/?project_status=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"filter-project",
								""
							],
							"query": [
								{
									"key": "project_status",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sidebar project filtration by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// Отримання тіла відповіді у JSON форматі\r",
									"var responseBody = pm.response.json();\r",
									"\r",
									"// Очікуване значення для поля project_status\r",
									"var expectedProjectStatus = {\r",
									"    \"status\": \"В розробці\"\r",
									"};\r",
									"\r",
									"// Перевірка кожного об'єкту в масиві\r",
									"pm.test(\"Each object contains project_status with expected value\", function () {\r",
									"    // Перебір кожного об'єкту в масиві\r",
									"    responseBody.forEach(function (item) {\r",
									"        // Перевірка, що об'єкт містить поле project_status з очікуваним значенням\r",
									"        pm.expect(item).to.have.property('project_status').that.eqls(expectedProjectStatus);\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/filter-project/?project_status=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"filter-project",
								""
							],
							"query": [
								{
									"key": "project_status",
									"value": "1",
									"description": "\"В розробці\""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sidebar project filtration by type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"//Отримання тіла відповіді у JSON форматі\r",
									"var responseBody = pm.response.json();\r",
									"\r",
									"// Очікуване значення для поля project_type\r",
									"var expectedTypeProject = {\r",
									"    \"project_type\": \"Безкоштовний\"\r",
									"};\r",
									"\r",
									"// Перевірка кожного об'єкту в масиві\r",
									"pm.test(\"Each object contains type_project with expected value\", function () {\r",
									"    // Перебір кожного об'єкту в масиві\r",
									"    responseBody.forEach(function (item) {\r",
									"        // Перевірка, що об'єкт містить поле project_type з очікуваним значенням\r",
									"        pm.expect(item).to.have.property('type_project').that.eqls(expectedTypeProject);\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/filter-project/?type_project=3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"filter-project",
								""
							],
							"query": [
								{
									"key": "type_project",
									"value": "3",
									"description": "\"Безкоштовний\""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sidebar project filtration by status and type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// Отримання тіла відповіді у JSON форматі\r",
									"var responseBody = pm.response.json();\r",
									"\r",
									"// Перевірка кожного об'єкту в масиві\r",
									"pm.test(\"Each object contains expected type_project and project_status values\", function () {\r",
									"    // Перебір кожного об'єкту в масиві\r",
									"    responseBody.forEach(function (item) {\r",
									"        // Перевірка, що об'єкт містить поле type_project з очікуваним значенням\r",
									"        pm.expect(item.type_project).to.eql({ \"project_type\": \"Безкоштовний\" });\r",
									"        \r",
									"        // Перевірка, що об'єкт містить поле project_status з очікуваним значенням\r",
									"        pm.expect(item.project_status).to.eql({ \"status\": \"В розробці\" });\r",
									"    });\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/filter-project/?project_status=1&type_project=3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"filter-project",
								""
							],
							"query": [
								{
									"key": "project_status",
									"value": "1",
									"description": "\"В розробці\""
								},
								{
									"key": "type_project",
									"value": "3",
									"description": "\"Безкоштовний\""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sidebar project filtration by nonexisting status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// Отримання тіла відповіді у JSON форматі\r",
									"var responseBody = pm.response.json();\r",
									"\r",
									"// Перевірка, що тіло відповіді містить порожній масив\r",
									"pm.test(\"Response body contains an empty array\", function () {\r",
									"    pm.expect(responseBody).to.be.an('array').that.is.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/filter-project/?project_status=3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"filter-project",
								""
							],
							"query": [
								{
									"key": "project_status",
									"value": "3",
									"description": "\"Формування команди\""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sidebar project filtration by nonexisting type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// Отримання тіла відповіді у JSON форматі\r",
									"var responseBody = pm.response.json();\r",
									"\r",
									"// Перевірка, що тіло відповіді містить порожній масив\r",
									"pm.test(\"Response body contains an empty array\", function () {\r",
									"    pm.expect(responseBody).to.be.an('array').that.is.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/filter-project/?type_project=2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"filter-project",
								""
							],
							"query": [
								{
									"key": "type_project",
									"value": "2",
									"description": "\"Буткамп\""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sidebar project filtration by nonexisting status and type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// Отримання тіла відповіді у JSON форматі\r",
									"var responseBody = pm.response.json();\r",
									"\r",
									"// Перевірка, що тіло відповіді містить порожній масив\r",
									"pm.test(\"Response body contains an empty array\", function () {\r",
									"    pm.expect(responseBody).to.be.an('array').that.is.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/filter-project/?project_status=3&type_project=2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"filter-project",
								""
							],
							"query": [
								{
									"key": "project_status",
									"value": "3",
									"description": "\"Формування команди\""
								},
								{
									"key": "type_project",
									"value": "2",
									"description": "\"Буткамп\""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sidebar project filtration with existing status and nonexisting type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// Отримання тіла відповіді у JSON форматі\r",
									"var responseBody = pm.response.json();\r",
									"\r",
									"// Перевірка, що тіло відповіді містить порожній масив\r",
									"pm.test(\"Response body contains an empty array\", function () {\r",
									"    pm.expect(responseBody).to.be.an('array').that.is.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/filter-project/?project_status=1&type_project=2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"filter-project",
								""
							],
							"query": [
								{
									"key": "project_status",
									"value": "1",
									"description": "\"В розробці\""
								},
								{
									"key": "type_project",
									"value": "2",
									"description": "\"Буткамп\""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sidebar project filtration by nonexisting status and existing type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"// Отримання тіла відповіді у JSON форматі\r",
									"var responseBody = pm.response.json();\r",
									"\r",
									"// Перевірка, що тіло відповіді містить порожній масив\r",
									"pm.test(\"Response body contains an empty array\", function () {\r",
									"    pm.expect(responseBody).to.be.an('array').that.is.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/filter-project/?project_status=3&type_project=3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"filter-project",
								""
							],
							"query": [
								{
									"key": "project_status",
									"value": "3",
									"description": "\"Формування команди\""
								},
								{
									"key": "type_project",
									"value": "3",
									"description": "\"Безкоштовний\"\n"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pagination",
			"item": [
				{
					"name": "Create a new participant (precondition)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"JSON response contains id\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Масив імен\r",
									"var names = [ \"Олег\", \"Володимир\",\"Іван\",\"Михайло\", \"Андрій\",\"Сергій\",\"Петро\",\"Олександр\",\"Дмитро\",\"Артем\",  \"Оксана\",\"Тетяна\",\"Марія\",\"Анна\",\"Ірина\",\"Наталія\",\"Вікторія\",\"Катерина\",\"Олена\",\"Юлія\"];\r",
									"\r",
									"// Випадково вибираємо ім'я з масиву\r",
									"var postName = names[Math.floor(Math.random() * names.length)];\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"first_name\", postName);\r",
									"\r",
									"// Масив прізвищ\r",
									"var surnames = [ \"Іваненко\", \"Петренко\",\"Сидоренко\",\"Коваленко\",\"Ковальчук\", \"Мельничук\",\"Мороз\",\"Ткачук\",\"Бондар\",\"Лисенко\", \"Кравченко\", \"Іваненко\", \"Мельниченко\"];\r",
									"// Випадково вибираємо прізвище з масиву\r",
									"var postSurname = surnames[Math.floor(Math.random() * surnames.length)];\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"last_name\", postSurname);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 7 (7 ролей)\r",
									"var randomNumber = Math.floor(Math.random() * 7) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postSpeciality = randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"speciality\", postSpeciality);\r",
									"\r",
									"// Генеруємо випадкове число \r",
									"var minNumber = 1000000;\r",
									"var maxNumber = 9999999;\r",
									"\r",
									"var randomNumber = Math.floor(Math.random() * (maxNumber - minNumber + 1)) + minNumber;\r",
									"// Формуємо значення змінної, складаючи \"+380\" і випадкове число\r",
									"var postPhone = \"+38099\" + randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"phone_number\", postPhone);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 100 \r",
									"var randomNumber = Math.floor(Math.random() * 100) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postEmail =  \"test\" + randomNumber + \"@gmail.com\";\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"email_participant\", postEmail);\r",
									"\r",
									"// Масив коментарів\r",
									"var comments = [ \"Комунікабельний\",\"Відповідальний\",\"Дисциплінований\",\"Креативний\",\"Працьовитий\",\"Пунктуальний\",\"Ефективний\",\"Вміє працювати в команді\",\"Організований\", \"Аналітичний\"];\r",
									"\r",
									"// Випадково вибираємо коментар з масиву\r",
									"var postComment = comments[Math.floor(Math.random() * comments.length)];\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"comment\", postComment);\r",
									"\r",
									"// Генеруємо випадкове число \r",
									"var minNumber = 1000;\r",
									"var maxNumber = 9999;\r",
									"\r",
									"var randomNumber = Math.floor(Math.random() * (maxNumber - minNumber + 1)) + minNumber;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postDiscord = \"user#\" + randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"account_discord\", postDiscord);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 100 \r",
									"var randomNumber = Math.floor(Math.random() * 100) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postLinkedin =  \"https://www.linkedin.com/in/user\" + randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"account_linkedin\", postLinkedin);\r",
									"\r",
									"// Масив міст України\r",
									"var cities = [\"Київ\",\"Вінниця\",\"Луцьк\",\"Дніпро\",\"Донецьк\",\"Житомир\",\"Ужгород\",\"Запоріжжя\", \"Івано-Франківськ\",\"Кропивницький\",\"Луганськ\",\"Львів\",\"Миколаїв\", \"Одеса\",\"Полтава\",\"Рівне\",\"Суми\",\"Тернопіль\",\"Харків\",\"Херсон\",\"Хмельницький\",\"Черкаси\",\"Чернівці\",\"Чернігів\"];\r",
									"\r",
									"// Випадково вибираємо місто з масиву\r",
									"var postCity = cities[Math.floor(Math.random() * cities.length)];\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"city\", postCity);\r",
									"\r",
									"// Генеруємо випадкове булеве значення\r",
									"var experience = Math.random() < 0.5 ? false : true;\r",
									"\r",
									"//Зберігаємо значення змінної в середовищі\r",
									"pm.variables.set(\"experience\", experience);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 10 \r",
									"var randomNumber = Math.floor(Math.random() * 10) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postProject = randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"project\", postProject);\r",
									"\r",
									"// Масив стеку\r",
									"var stacks = [ \"Java\", \"Python\",\"JavaScript\",\"C#\",\"PHP\",\"HTML/CSS\",\"SQL\", \"React\",\"Angular\",\"Vue.js\",\"Node.js\", \"Django\",\r",
									"    \"Flask\",\"Spring Boot\",\"ASP.NET\",\"Laravel\", \"Ruby on Rails\",\r",
									"    \"iOS Development\",\"Android Development\",\"Manual QA\",\"Automated Testing\",\"DevOps\"];\r",
									"\r",
									"// Випадково вибираємо стек з масиву\r",
									"var postStack = stacks[Math.floor(Math.random() * stacks.length)];\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"stack\", postStack);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 3 (3 типи участі)\r",
									"var randomNumber = Math.floor(Math.random() * 3) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postType = randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"type_participant\", postType);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"{{first_name}}\",\r\n  \"last_name\": \"{{last_name}}\",\r\n  \"speciality\": {{speciality}},\r\n  \"phone_number\": \"{{phone_number}}\",\r\n  \"email\": \"{{email_participant}}\",\r\n  \"comment\": \"{{comment}}\",\r\n  \"account_discord\": \"{{account_discord}}\",\r\n  \"account_linkedin\": \"{{account_linkedin}}\",\r\n  \"city\": \"{{city}}\",\r\n  \"experience\": {{experience}},\r\n  \"project\": [{{project}}],\r\n  \"stack\": \"{{stack}}\",\r\n  \"type_participant\": {{type_participant}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/add-participant/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"add-participant",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new project (precondition)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Генеруємо випадкове число від 1 до 100 \r",
									"var randomNumber = Math.floor(Math.random() * 100) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postTitle =  \"test\" + randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"title\", postTitle); \r",
									"\r",
									"// Масив коментарів\r",
									"var comments = [ \"Складний проєкт, вимагає розуміння технологій\",\r",
									"    \"Потрібен ментор для підтримки новачків\",\r",
									"    \"Великий масштабний проєкт з багатьма інтеграціями\",\r",
									"    \"Фокус на оптимізацію та вдосконалення продукту\",\r",
									"    \"Проєкт з постійними змінами вимог\",\r",
									"    \"Проєкт з використанням новітніх технологій\",\r",
									"    \"Робота над високонавантаженою системою\",\r",
									"    \"Мобільний додаток для платформи iOS\",\r",
									"    \"Веб-додаток для управління бізнес-процесами\",\r",
									"    \"Тестування та вдосконалення інтерфейсу користувача\"];\r",
									"\r",
									"// Випадково вибираємо коментар з масиву\r",
									"var postComment = comments[Math.floor(Math.random() * comments.length)];\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"comment_project\", postComment);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 3 (3 типи проєкту)\r",
									"var randomNumber = Math.floor(Math.random() * 3) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postType = randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"type_project\", postType);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 5 (5 типів складності)\r",
									"var randomNumber = Math.floor(Math.random() * 5) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postComplexity = randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"complexity\", postComplexity);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 3 (3 статуси проєкту)\r",
									"var randomNumber = Math.floor(Math.random() * 3) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postStatus = randomNumber;\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"project_status\", postStatus);\r",
									"\r",
									"// Функція для генерації випадкової дати в діапазоні\r",
									"function randomDate(start, end) {\r",
									"  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
									"}\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2023-01-01\");\r",
									"var endDate = new Date(\"2023-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomStartDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedStartDate = randomStartDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"start_date\", formattedStartDate);\r",
									"\r",
									"// Встановлюємо дату початку та кінця діапазону\r",
									"var startDate = new Date(\"2024-01-01\");\r",
									"var endDate = new Date(\"2024-08-24\");\r",
									"\r",
									"// Генеруємо випадкову дату\r",
									"var randomEndDate = randomDate(startDate, endDate);\r",
									"\r",
									"// Форматуємо дату в рядок у форматі \"YYYY-MM-DD\"\r",
									"var formattedEndDate = randomEndDate.toISOString().split('T')[0];\r",
									"\r",
									"// Зберігаємо значення в змінну\r",
									"pm.variables.set(\"end_date\", formattedEndDate);\r",
									"\r",
									"// Генеруємо випадкове число від 1 до 100 \r",
									"var randomNumber = Math.floor(Math.random() * 100) + 1;\r",
									"\r",
									"// Формуємо значення змінної\r",
									"var postAddress =  \"https://test\" + randomNumber + \".com\";\r",
									"\r",
									"// Зберігаємо значення змінної в середовищі\r",
									"pm.environment.set(\"address_site\", postAddress); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"{{title}}\",\n  \"comment\": \"{{comment_project}}\",\n  \"type_project\": {{type_project}},\n  \"complexity\": {{complexity}},\n  \"project_status\": {{project_status}},\n  \"start_date_project\": \"{{start_date}}\",\n  \"end_date_project\": \"{{end_date}}\",\n  \"address_site\":  \"{{address_site}}\",\n  \"url\": \"tests\"\n  \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/create-project/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"create-project",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Pagination (Main page Participants)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/participants-list/?page_size=9&page=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"participants-list",
								""
							],
							"query": [
								{
									"key": "page_size",
									"value": "9"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Pagination (Main page Projects)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/user-project/projects/?page_size=9&page=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"projects",
								""
							],
							"query": [
								{
									"key": "page_size",
									"value": "9"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Participant registration in Baza Trainee Ukraine",
			"item": [
				{
					"name": "(invalid first_name Null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing1@gmail.com\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid first_name 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"A\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing1234@gmail.com\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid first_name 21)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Alexanderalexamderrrr\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing1324234@gmail.com\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid last_name null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Alexander\",\r\n    \"last_name\": \"\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing1@gmail.com\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid last_name 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Alexander\",\r\n    \"last_name\": \"K\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing14@gmail.com\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid last_name 51)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Alexander\",\r\n    \"last_name\": \"Kozlovidsojspojsdvjcklxgeygfsdfsygfeygfhsbcfygdhbcg\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing1@gmail.com\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid stack null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Alexander\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing1@gmail.com\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid stack 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Alexander\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"t\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing1@gmail.com\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid stack 301)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Alexander\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"sadfghjkjhfdsxcvbnbvxsefdrgvdfgsadfghjkjhfdsxcvbnbvxsefdrgvdfgsadfghjkjhfdsxcvbnbvxsefdrgvdfgsadfghjkjhfdsxcvbnbvxsefdrgvdfgsadfghjkjhfdsxcvbnbvxsefdrgvdfgsadfghjkjhfdsxcvbnbvxsefdrgvdfgsadfghjkjhfdsxcvbnbvxsefdrgvdfgsadfghjkjhfdsxcvbnbvxsefdrgvdfgsadfghjkjhfdsxcvbnbvxsefdrgvdfgsadfghjkjhfdsxcvbnbvxs\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing1@gmail.com\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid phone_number null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Alexander\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"\",\r\n    \"email\": \"testing1@gmail.com\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid phone_number 12)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Alexander\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+38099999999\",\r\n    \"email\": \"testing1@gmail.com\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid phone_number 14)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Alexander\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+3809999999996\",\r\n    \"email\": \"testing1@gmail.com\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid email null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid email 5)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"a@i.u\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid email 71)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing111111111111111111111111111111111111111111111111111111@gmail.com\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid email)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"nameexample.com\",\r\n    \"account_discord\": \"ivan#1112\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid account_dscord null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid account_dscord 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"if\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid account_dscord 38)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"discofdgdgdffdfggjhfdvdfgbhjfcvrg#1111\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid account_dscord 6 whith#1111)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"u#1111\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ivan-avanov-12345677/\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid account_linkedin null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999990\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"discofdgg#1111\",\r\n    \"account_linkedin\": \"\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid account_linkedin 18)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999999\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"discofdgdg#1111\",\r\n    \"account_linkedin\": \"linkedin.com/in/an\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid account_linkedin 129)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999999\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"discofdgdg#1111\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/anastasiiaodfsvsvsfzcxzczxvfcbcvxzsdsidhghsjkallskdjfhnvcmx-fgdhskdjchvbgfdhjskzmxncbvvgfxhjj-7525145\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(city null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999999\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"discofdgdg#1111\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ana\",\r\n    \"city\": \"\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid city 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999999\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"discofdgdg#1111\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ana\",\r\n    \"city\": \"K\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid city 51)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999999\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"discofdgdg#1111\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ana\",\r\n    \"city\": \"KyivKyivKyivKyivKyivKyivKyivKyivKyivKyivKyivKyivKyi\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid experience null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999999\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"discofdgdg#1111\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/anastasiiaodf\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": \"\",\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid project null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999999\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"discofdgdg#1111\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/anastasiiaodf\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid type_participant null)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999999\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"discofdgdg#1111\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/anastasiiaodf\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid conditions_participation false)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999999\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"discofdgdg#1111\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/ana\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": false,\r\n    \"processing_personal_data\": true,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "(invalid processing_personal_data false)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"first_name\": \"Sasha\",\r\n    \"last_name\": \"Kozlov\",\r\n    \"stack\": \"tester\",\r\n    \"phone_number\": \"+380999999999\",\r\n    \"email\": \"testing@gmail.com\",\r\n    \"account_discord\": \"discofdgdg#1111\",\r\n    \"account_linkedin\": \"https://www.linkedin.com/in/anastasiiaodf\",\r\n    \"city\": \"Kyiv\",\r\n    \"experience\": true,\r\n    \"project\": [1],\r\n    \"conditions_participation\": true,\r\n    \"processing_personal_data\": false,\r\n    \"type_participant\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Registrering a new participant using valid data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token {{token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"first_name\": \"Яна\",\r\n  \"last_name\": \"Любченко\",\r\n  \"stack\": \"Product manager\",\r\n  \"phone_number\": \"+380661763661\",\r\n  \"email\": \"name@example.com\",\r\n  \"account_discord\": \"US#1111\",\r\n  \"account_linkedin\": \"linkedin.com/in/ana\",\r\n  \"city\": \"Київ\",\r\n  \"experience\": true,\r\n  \"type_participant\": 1,\r\n  \"project\": [1],\r\n  \"conditions_participation\": true,\r\n  \"processing_personal_data\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/user-project/join/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user-project",
								"join",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}